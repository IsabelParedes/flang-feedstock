{% set version = "19.0.0.dev0" %}
{% set build_number = 0 %}

{% if not variant %}
{% set variant = "default" %}
{% endif %}

package:
  name: flang-split
  version: {{ version }}

source:
  # url: https://github.com/llvm/llvm-project/archive/refs/tags/llvmorg-{{ version.replace(".rc", "-rc") }}.tar.gz
  url: https://github.com/llvm/llvm-project/archive/3bb25636414ee5b5eaf99c0bdcc191052c9d7ffb.tar.gz
  sha256: 72bb3117472025b4e6a6fd6b04041abc735fedbe7f023e56c0413c0cfeb3ca0c
  # TODO: add patches for this emscripten variant only
  # patches:
  #   - patches/emscripten/0001....patch # [variant and variant.startswith("emscripten_")]

build:
  number: {{ build_number }}
  # intentionally only windows (main target) & linux (debuggability)
  skip: true  # [osx]
  track_features:
    - flang

requirements:
  build:
    - {{ compiler('c') }}
    - {{ stdlib('c') }}
    - {{ compiler('cxx') }}
    - cmake
    - ninja
    - mlir =={{ version }}     # [build_platform != target_platform]
    # for showing CPU info of CI agent
    - numpy *
  host:
    - clangdev =={{ version }}
    - compiler-rt =={{ version }}
    - lit =={{ version }}
    - llvm-openmp =={{ version }}
    - llvmdev =={{ version }}
    - mlir =={{ version }}
    - zlib

test:
  commands:
    - flang --version

outputs:
  - name: libflang
    script: install_libflang.sh  # [unix]
    script: install_libflang.bat  # [win]
    build:
      track_features:
        - emscripten
      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }} # [variant and variant.startswith("emscripten_")]
    requirements:
      build:
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
      run:
        # necessary to link on windows (even for static lib), e.g.
        # FortranDecimal.lib(binary-to-decimal.cpp.obj) : error LNK2019: unresolved external symbol __udivti3 ...
        - compiler-rt =={{ version }}  # [win]
    test:
      commands:
        # shared lib on linux
        - test -f $PREFIX/lib/libFortranRuntime.so              # [linux]
        # static lib on win (fails to export symbols for shared build)
        - if not exist %LIBRARY_LIB%\FortranRuntime.lib exit 1  # [win]

  - name: flang
    script: install_flang.sh  # [unix]
    script: install_flang.bat  # [win]
    build:
      track_features:
        - emscripten
      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }} # [variant and variant.startswith("emscripten_")]
    run_exports:
      strong:
        - libflang >={{ version }}
    requirements:
      build:
        - cmake
        - ninja
        # for strong run-exports
        - {{ compiler('c') }}
        - {{ stdlib('c') }}
        - {{ compiler('cxx') }}
      host:
        - clangdev =={{ version }}
        - compiler-rt =={{ version }}
        - llvmdev =={{ version }}
        - mlir =={{ version }}
        # for required run-exports
        - llvm =={{ version }}
        - libclang-cpp =={{ version }}
        # ninja really wants to find z.lib on win
        - zlib  # [win]
        - zstd  # [win]
        - {{ pin_subpackage('libflang', exact=True) }}
      run:
        - sysroot_{{ target_platform }} >={{ c_stdlib_version }}    # [linux]
        - clangdev =={{ version }}
        - {{ pin_subpackage('libflang', exact=True) }}
    test:
      requires:
        - {{ compiler('c') }}       # [win]
        - {{ compiler('cxx') }}     # [win]
      files:
        - hello_world.f90
      commands:
        # see naming discussion: https://discourse.llvm.org/t/reviving-rename-flang-new-to-flang/68130/2
        # - flang hello_world.f90
        - flang-new hello_world.f90
        - ./a.out   # [unix]
        - a.exe     # [win]

  - name: flang_{{ target_platform }}
    build:
      track_features:
        - emscripten
      string: {{ variant }}_h{{ PKG_HASH }}_{{ build_number }} # [variant and variant.startswith("emscripten_")]
    run_exports:
      strong:
        - libflang >={{ version }}
    requirements:
      - {{ pin_subpackage('flang', exact=True) }}


about:
  home: https://flang.llvm.org
  license: Apache-2.0
  license_file: flang/LICENSE.TXT
  summary: Flang is a Fortran compiler targeting LLVM.
  dev_url: https://github.com/llvm/llvm-project

extra:
  recipe-maintainers:
    - isuruf
    - h-vetinari
  feedstock-name: flang
